1. event-> e.clientX  -> position of x relative t visible port, not the scrollable one
altKey: A boolean indicating whether the "Alt" key was pressed when the event occurred.

bubbles: A boolean indicating whether the event bubbles up through the DOM or not.

button: Indicates which mouse button was pressed. For example, 0 is the left button, 1 is the middle button, and 2 is the right button.

buttons: A bitmask indicating which buttons are pressed. It gives more detailed information than the button property.

clientX: The horizontal coordinate of the mouse pointer in relation to the viewport (excluding scroll offsets).

clientY: The vertical coordinate of the mouse pointer in relation to the viewport (excluding scroll offsets).

ctrlKey: A boolean indicating whether the "Ctrl" key was pressed when the event occurred.

currentTarget: The element on which the event listener is attached, as opposed to the target element where the event originally occurred.

defaultPrevented: A boolean indicating whether event.preventDefault() was called.

eventPhase: An integer indicating the current phase of the event flow (capturing, target, or bubbling).

metaKey: A boolean indicating whether the "Meta" key (Command key on macOS or Windows key on Windows) was pressed.

relatedTarget: The other element involved in the event, such as the element being moused over or out of.

screenX: The horizontal coordinate of the mouse pointer in relation to the screen.

screenY: The vertical coordinate of the mouse pointer in relation to the screen.

shiftKey: A boolean indicating whether the "Shift" key was pressed when the event occurred.

target: The element that triggered the event.

type: The type of event (e.g., "click", "mousemove", etc.).

view: The window object associated with the event.

which: The button number of the mouse click (similar to the button property).



2. getBoundingRect -> give he dimensions like top , left , right , width , height , 
with respect the viewport .

x: The X coordinate of the top-left corner of the element relative to the viewport.
y: The Y coordinate of the top-left corner of the element relative to the viewport.
width: The width of the element in pixels.
height: The height of the element in pixels.
top: The distance from the top of the viewport to the top of the element.
right: The distance from the left of the viewport to the right of the element.
bottom: The distance from the top of the viewport to the bottom of the element.
left: The distance from the left of the viewport to the left of the element.

3. forwardRef

4. creaating the ref dynamically for new added ui elements 
-> createRef()
->ref holding array of ref

5. window.innerHeight

6. window.innerWidth

Definition: This returns the total height of the browser's viewport, including the height of any scrollbars (if present).
Includes Scrollbars: If the viewport has a scrollbar, it includes the scrollbar height.

6.1. document.documentElement.clientHeight
1. document.documentElement.clientHeight:
Definition: This returns the height of the visible part of the document (i.e., the viewport) without including the height of any scrollbars.
Excludes Scrollbars: If the viewport has a scrollbar, it does not count the space occupied by the scrollbar.
Applies to: The root element of the document, which is usually the <html> element (i.e., document.documentElement).



7. onMouseMove -> while mouse is moving 
8. domele.style.left
9. arr.find -> returns the elemetn
10. arr.some -> retruns true as soon as the criteria meet
11. arr.every -> if every condition meets then true or false


Property	              Relative to
The screenX Property	The Screen area
The screenY Property	The Screen area
The clientX Property	The Window area
The clientY Property	The Window area
The pageX Property	The Page (Document)
The pageY Property	The Page (Document)
The offsetX Property	The target Element
The offsetY Property	The target Element